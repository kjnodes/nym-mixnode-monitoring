# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "30s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will cache metric_buffer_limit metrics for each output, and will
  ## flush this buffer on a successful write.
  metric_buffer_limit = 10000
  ## Flush the buffer whenever full, regardless of flush_interval.
  flush_buffer_when_full = true

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "1s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Run telegraf in debug mode
  debug = false
  ## Run telegraf in quiet mode
  quiet = false
  ## Override default hostname, if empty use os.Hostname()
  hostname = "telegraf-host"


###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

# Prometheus metrics endpoint
[[outputs.prometheus_client]]
    listen = "0.0.0.0:9273"
    path = "/metrics"
    metric_version = 2
    expiration_interval = "60s"


###############################################################################
#                                  INPUTS                                     #
###############################################################################

###############################
#	MIXNODE               #
##############################

[[inputs.http]]
    urls = ["http://${MIXNODE_PUBLIC_IP}:${MIXNODE_PORT}/stats"]
    data_format = "json_v2"
    [inputs.http.tags]
      mixnode = "${MIXNODE_NAME}"
    [[inputs.http.json_v2]]
         [[inputs.http.json_v2.field]]
            path = "received_since_startup"
         [[inputs.http.json_v2.field]]
            path = "sent_since_startup"
         [[inputs.http.json_v2.field]]
            path = "dropped_since_startup"
         [[inputs.http.json_v2.field]]
            path = "received_since_last_update"
         [[inputs.http.json_v2.field]]
            path = "sent_since_last_update"
         [[inputs.http.json_v2.field]]
            path = "dropped_since_last_update"
         [[inputs.http.json_v2.field]]
            path = "update_time"



[[inputs.http]]
    urls = ["https://validator.nymtech.net/api/v1/status/mixnode/${MIXNODE_MIX_ID}/reward-estimation"]
    interval = "10m"
    data_format = "json_v2"
    [inputs.http.tags]
      mixnode = "${MIXNODE_NAME}"
    [[inputs.http.json_v2]]
         [[inputs.http.json_v2.field]]
            path = "estimation.total_node_reward"
            rename = "estimated_total_node_reward"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "estimation.operator"
            rename = "estimated_operator_reward"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "estimation.delegates"
            rename = "estimated_delegators_reward"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "estimation.operating_cost"
            rename = "estimated_operator_cost"
            type = "float"



[[inputs.http]]
    urls = ["https://validator.nymtech.net/api/v1/status/mixnode/${MIXNODE_MIX_ID}/report"]
    interval = "10m"
    data_format = "json_v2"
    [inputs.http.tags]
      mixnode = "${MIXNODE_NAME}"
    [[inputs.http.json_v2]]
         [[inputs.http.json_v2.field]]
            path = "most_recent"
            rename = "report_uptime"
            type = "int"
         [[inputs.http.json_v2.field]]
            path = "last_hour"
            rename = "report_last_hour"
            type = "int"
         [[inputs.http.json_v2.field]]
            path = "last_day"
            rename = "report_last_day"
            type = "int"


[[inputs.http]]
    urls = ["https://explorer.nymtech.net/api/v1/mix-node/${MIXNODE_MIX_ID}"]
    interval = "10m"
    data_format = "json_v2"
    [inputs.http.tags]
      mixnode = "${MIXNODE_NAME}"
    [[inputs.http.json_v2]]
         [[inputs.http.json_v2.field]]
            path = "total_delegation.amount"
            rename = "total_delegation"
            type = "int"
         [[inputs.http.json_v2.field]]
            path = "stake_saturation"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "avg_uptime"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "estimated_delegators_apy"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "estimated_operator_apy"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "status"
            rename = "new_active"


[[inputs.http]]
    urls = ["https://mixnet.api.explorers.guru/api/mixnodes"]
    interval = "10m"
    data_format = "json_v2"
    [inputs.http.tags]
      mixnode = "${MIXNODE_NAME}"
    [[inputs.http.json_v2]]
         [[inputs.http.json_v2.field]]
	    path = "#(identityKey==${MIXNODE_IDENTITY_KEY}).apy"
            rename = "apy"
            type = "float"

[[inputs.http]]
    urls = ["https://mixnet.api.explorers.guru/api/accounts/${MIXNODE_WALLET_ADDRESS}/balance"]
    interval = "10m"
    data_format = "json_v2"
    timeout = "45s"
    [inputs.http.tags]
      mixnode = "${MIXNODE_NAME}"
    [[inputs.http.json_v2]]
         [[inputs.http.json_v2.field]]
            path = "claimableCommission.amount"
            rename = "rewards_operators"
            type = "float"
         [[inputs.http.json_v2.field]]
            path = "claimableRewards.amount"
            rename = "rewards_personnal"
            type = "float"
