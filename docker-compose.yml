volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  nym-monitoring:

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: nym-prometheus
    volumes:
       - type: volume
         source: prometheus_data
         target: /prometheus
       - type: bind
         source: ./prometheus
         target: /etc/prometheus
         read_only: true 
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - nym-monitoring
    restart: unless-stopped

  # default login credentials: admin/admin
  grafana:
    image: grafana/grafana:latest
    env_file: ./grafana/grafana.conf
    container_name: nym-grafana
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 9999:3000
    networks:
      - nym-monitoring
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: nym-alertmanager
    networks:
      - nym-monitoring
    ports:
      - 9093:9093
    volumes:
      - type: bind
        source: ./alertmanager
        target: /etc/alertmanager
        read_only: true
    command: [
      '--config.file=/etc/alertmanager/alertmanager.yml',
      '--log.level=debug',
    ]
    restart: unless-stopped

  telegraf:
    image: telegraf:latest
    container_name: nym-telegraf
    volumes:
      - /:/hostfs:ro
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    ports:
      - 9273:9273
    networks:
      - nym-monitoring
    restart: unless-stopped
    env_file:
      - ./telegraf/telegraf.env

volumes:
  grafana-volume:
  prometheus-volume:
